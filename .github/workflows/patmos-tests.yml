name: Patmos Tests

on:
  push: 
    branches: '**'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-**'
  pull_request:

env:
  CARGO_TERM_COLOR: always
  J: -j2
  BUILD_PATH: build
  INSTALL_PATH: build/local
  LLVM_PATH: llvm
  
jobs:
  test-non-patmos:
    name: Test Non-Patmos
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env: 
      CC: gcc-9
      CXX: g++-9
    steps:
      - uses: actions/checkout@v2
      - name: Build and Run LLVM Unit and Regression Tests
        uses: ./.github/actions/llvm-test-unit-reg
        with:
          targets: X86;AArch64;RISCV
          enable-assertions: true
          # The following test are known to fail on pure upstream
          exclude-reg: "|tools/llvm-ml|tools/llvm-gsymutil"
          # Inlcude all unit tests
          include-only: ""
          default-target: x86_64-unknown-linux-gnu
      - name: Finalize LLVM Build
        working-directory: ${{env.BUILD_PATH}}
        run: make $J llc llvm-link clang llvm-config llvm-objdump opt
  
  test-patmos:
    name: Test (${{matrix.platform}})
    runs-on: ${{matrix.platform}}
    strategy:
      fail-fast: false
      matrix:
        include: 
          - platform: ubuntu-18.04
            cc: gcc-9
            cxx: g++-9
          - platform: macOS-10.15
            cc: clang
            cxx: clang++
          
    env:
      RELEASE_TAR: patmos-llvm*.tar.gz
      PATMOS_TRIPLE: patmos-unknown-unknown-elf
      GOLD_TAR: patmos-gold.tar.gz
      SIMULAROT_TAR: patmos-simulator.tar.gz
      CC: ${{matrix.cc}}
      CXX: ${{matrix.cxx}}
    
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        env:
          GOLD_LINK: https://github.com/t-crest/patmos-gold/releases/download/v1.0.0-rc-1/patmos-gold-v1.0.0-rc-1.tar.gz
          SIMULATOR_LINK: https://github.com/t-crest/patmos-simulator/releases/download/1.0.2/patmos-simulator-x86_64-linux-gnu.tar.gz
        run: |
          mkdir -p $INSTALL_PATH
          cd $INSTALL_PATH
          # Dowload Dependencies
          wget -O $GOLD_TAR $GOLD_LINK
          wget -O $SIMULAROT_TAR $SIMULATOR_LINK
          # Extract dependencies
          tar -xvf $GOLD_TAR
          tar -xvf $SIMULAROT_TAR
          # Set path
          echo "$GITHUB_WORKSPACE/$INSTALL_PATH/bin" >> $GITHUB_PATH
      - name: Build and Run LLVM Unit and Regression Tests
        uses: ./.github/actions/llvm-test-unit-reg
        with:
          enable-assertions: true
      - name: Finalize LLVM Build
        working-directory: ${{env.BUILD_PATH}}
        run: make $J llc llvm-link clang llvm-config llvm-objdump opt