//====-- PatmosSubtarget.h - Define Subtarget for the Patmos ---*- C++ -*--===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the Patmos specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef _LLVM_TARGET_PATMOS_SUBTARGET_H_
#define _LLVM_TARGET_PATMOS_SUBTARGET_H_

#include "llvm/Target/TargetSubtargetInfo.h"

#define GET_SUBTARGETINFO_HEADER
#include "PatmosGenSubtargetInfo.inc"

#include <string>

namespace llvm {
class StringRef;

class PatmosSubtarget : public PatmosGenSubtargetInfo {
  bool HasFPU;
  bool HasMethodCache;

  InstrItineraryData InstrItins;

public:
  /// This constructor initializes the data members to match that
  /// of the specified triple.
  ///
  PatmosSubtarget(const std::string &TT, const std::string &CPU,
                  const std::string &FS);

  /// ParseSubtargetFeatures - Parses features string setting specified
  /// subtarget options.  Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef FS);

  /// getInstrItins - Return the instruction itineraries based on subtarget.
  const InstrItineraryData &getInstrItineraryData() const { return InstrItins; }

  bool hasFPU() { return HasFPU; }

  bool hasMethodCache() { return HasMethodCache; }

  /////////////////////////////////////////////////////////////////////////////
  // Patmos specific architecture parameters (cache sizes, types, features,..)
  // TODO move this into / configure from SubtargetImpl ??
  // TODO use config-file to read configuration from (in addition to options)

  unsigned getStackCacheSize() const;

  unsigned getStackCacheBlockSize() const;

  unsigned getMethodCacheSize() const;

  unsigned getMethodCacheBlockSize() const;

};
} // End llvm namespace

#endif  // _LLVM_TARGET_PATMOS_SUBTARGET_H_
